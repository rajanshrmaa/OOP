#Single Level
// Single-Level inheritance
// Class B ---> Class A, which means that class B is derived from Class A

class A {
	int a;
	void set_A(int x) { 
	a = x; 
	}
}

// Class B have access to all public and protected methods and data members of Class A
class B extends A {
	int b, product;
	void set_B(int x) { 
	b = x; 
	}
	void cal_Product()
	{
		product = a * b;
		System.out.println("Product = " + product);
	}
	public static void main(String[] args)
	{
		B b = new B();
		b.set_A(5);
		b.set_B(5);
		b.cal_Product();
	}
}
____________________________________________________________________________________________________________________________________________________________________


#mutiple inheritance 

// Multilevel inheritance
// Class C ---> Class B ---> Class A
// Class C is derived from Class B which in correspondence derived from Class A

class A {
	int a;
	void set_A(int x) { 
	a = x; 
	}
}

// Child of Class A
class B extends A {
	int b;
	void set_B(int x) { 
	b = x; 
	}
}

// Child of Class B but have access to methods of both classes, i.e., Class A and B
class C extends B {
	int c, product;
	void cal_Product()
	{
		product = a * b;
		System.out.println("Product = " + product);
	}
	public static void main(String[] args)
	{
		C c = new C();
		// Class C accesses methods of both class A and B
		c.set_A(5);
		c.set_B(5);
		c.cal_Product();
	}
}

______________________________________________________________________________________________________________________________________________________________________

// Hierarchical inheritance
// Class C ---> Class A <--- Class B
// Both Class B and C inherits Class A

class A {
	int a;
	void set_A(int x) { 
		a = x; 
		System.out.println("Setting A's value to = " + x);
	}
}

// Class B derived from Class A
class B extends A {
	int b;
	void set_B(int x) { 
	b = x; 
	System.out.println("Setting B's value to = " + b);
	}
}

// Class C also derived from Class A
class C extends A {
	int c;
	void set_C(int x) {
	c = x;
	System.out.println("Setting C's value to = " + c);
	}
}

public class GFG {
	public static void main(String[] args) {
		C c = new C();
		c.set_C(5);
		c.set_A(50);
		
		B b = new B();
		b.set_B(10);
		b.set_A(15);
	}
}
